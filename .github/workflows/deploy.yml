---
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Auto-generate date job to update _config.yml
  auto-gen-date:
    name: Update ci_last_modified_date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: true

      - name: Set date
        id: set_date
        run: |
          date_value=$(date +'%Y-%m-%d')
          echo "date_yyyy_mm_dd=$date_value" >> $GITHUB_ENV
          echo "date=$date_value" >> $GITHUB_OUTPUT

      # Update the YAML line safely (no need to hunt for a placeholder)
      - name: Update _config.yml
        shell: bash
        run: |
          set -euo pipefail
          export LC_ALL=C

          # Normalize line endings in case of CRLF
          if file _config.yml | grep -q CRLF; then
            sed -i 's/\r$//' _config.yml
          fi

          # Add key if not present (ignore commented lines)
          if ! grep -Eq '^[[:space:]]*ci_last_modified_date:' _config.yml; then
            echo "ci_last_modified_date not found, adding it."
            printf '\nci_last_modified_date: "%s"\n' "$date_yyyy_mm_dd" >> _config.yml
          else
            echo "ci_last_modified_date found, updating it."
            # Update exactly the line that sets the key (first match), keep it quoted
            # Handles optional indentation before the key
            sed -i -E '0,/^[[:space:]]*ci_last_modified_date:[[:space:]]*/ s//ci_last_modified_date: "'"$date_yyyy_mm_dd"'"/' _config.yml
          fi

          echo "Updated to: $date_yyyy_mm_dd"

      - name: Commit and Push
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: "ci: Auto-update date to ${{ steps.set_date.outputs.date }} [skip ci]"
          file_pattern: "_config.yml"

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v4
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
